import React, { useState } from "react";
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  ScrollView,
  KeyboardAvoidingView,
  Platform,
} from "react-native";

export default function Chamuyometro() {
  const [chamuyo, setChamuyo] = useState("");
  const [calificacion, setCalificacion] = useState(null);
  const [consejo, setConsejo] = useState("");
  const [tema, setTema] = useState("");
  const [respuestaChamuyo, setRespuestaChamuyo] = useState("");

  const consejosAleatorios = [
    "Est√° bueno, pero prob√° con algo m√°s divertido.",
    "Suena bien, pero s√© m√°s directo.",
    "Us√° m√°s humor, rompe el hielo.",
    "Demasiado cl√°sico, sorprend√© m√°s.",
    "Buen intento, pero bajale un poco a lo intenso.",
    "Interesante, pero agregale un cumplido sincero.",
  ];

  const chamuyosAleatorios = [
    "¬øCre√©s en el amor a primera vista o tengo que pasar de nuevo?",
    "¬øSos de ac√° o te escapaste del cielo?",
    "Perd√≥n, pero mi mapa se rompi√≥‚Ä¶ ¬øc√≥mo llego a tu coraz√≥n?",
    "¬øTe doli√≥ cuando ca√≠ste del cielo o ya est√°s acostumbrado/a a ser un √°ngel?",
    "¬øMe pod√©s prestar un beso? Prometo devolv√©rtelo.",
    "No soy fot√≥grafo, pero puedo imaginarme juntos.",
    "¬øTe gusta el caf√©? Porque ten√©s todo lo que necesito para empezar bien el d√≠a.",
  ];

  // Calificar chamuyo
  const handleCalificar = () => {
    if (!chamuyo.trim()) return;
    const porcentaje = Math.floor(Math.random() * 101); // 0 - 100
    const consejoRandom =
      consejosAleatorios[Math.floor(Math.random() * consejosAleatorios.length)];

    setCalificacion(porcentaje);
    setConsejo(consejoRandom);
  };

  // Generar chamuyo
  const handleGenerarChamuyo = () => {
    if (!tema.trim()) return;
    const chamuyoRandom =
      chamuyosAleatorios[Math.floor(Math.random() * chamuyosAleatorios.length)];

    setRespuestaChamuyo(`Chamuyo para "${tema}": ${chamuyoRandom}`);
  };

  return (
    <KeyboardAvoidingView
      behavior={Platform.OS === "ios" ? "padding" : "height"}
      style={styles.container}
    >
      <ScrollView contentContainerStyle={styles.scrollContent}>
        <Text style={styles.title}>üî• Chamuy√≥metro üî•</Text>

        {/* Calificar Chamuyo */}
        <View style={styles.section}>
          <Text style={styles.label}>üí¨ Escrib√≠ tu chamuyo:</Text>
          <TextInput
            style={styles.input}
            placeholder="Ej: ¬øCre√©s en el amor a primera vista?"
            value={chamuyo}
            onChangeText={setChamuyo}
          />
          <TouchableOpacity style={styles.button} onPress={handleCalificar}>
            <Text style={styles.buttonText}>Calificar Chamuyo</Text>
          </TouchableOpacity>

          {calificacion !== null && (
            <View style={styles.resultContainer}>
              <Text style={styles.resultText}>üíØ Puntuaci√≥n: {calificacion}%</Text>
              <Text style={styles.resultText}>üí° Consejo: {consejo}</Text>
            </View>
          )}
        </View>

        {/* Generar Chamuyo */}
        <View style={styles.section}>
          <Text style={styles.label}>‚ùì ¬øSobre qu√© quer√©s chamuyar?</Text>
          <TextInput
            style={styles.input}
            placeholder="Ej: Perros, caf√©, cine, m√∫sica..."
            value={tema}
            onChangeText={setTema}
          />
          <TouchableOpacity style={styles.button} onPress={handleGenerarChamuyo}>
            <Text style={styles.buttonText}>Generar Chamuyo</Text>
          </TouchableOpacity>

          {respuestaChamuyo !== "" && (
            <View style={styles.resultContainer}>
              <Text style={styles.resultText}>{respuestaChamuyo}</Text>
            </View>
          )}
        </View>
      </ScrollView>
    </KeyboardAvoidingView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#000",
    paddingHorizontal: 20,
    paddingTop: 50,
  },
  scrollContent: {
    alignItems: "center",
    paddingBottom: 30,
  },
  title: {
    fontSize: 32,
    fontWeight: "bold",
    color: "#ff69b4",
    marginBottom: 30,
    textAlign: "center",
  },
  section: {
    width: "100%",
    marginBottom: 30,
    padding: 20,
    backgroundColor: "#222",
    borderRadius: 10,
  },
  label: {
    fontSize: 18,
    color: "#fff",
    marginBottom: 10,
    textAlign: "center",
  },
  input: {
    backgroundColor: "#333",
    color: "#fff",
    borderRadius: 8,
    padding: 10,
    fontSize: 16,
    marginBottom: 15,
    textAlign: "center",
  },
  button: {
    backgroundColor: "#ff69b4",
    paddingVertical: 12,
    borderRadius: 8,
    alignItems: "center",
  },
  buttonText: {
    color: "#fff",
    fontSize: 16,
    fontWeight: "bold",
  },
  resultContainer: {
    marginTop: 15,
    alignItems: "center",
  },
  resultText: {
    fontSize: 16,
    color: "#ffd700",
    marginBottom: 5,
    textAlign: "center",
  },
});
